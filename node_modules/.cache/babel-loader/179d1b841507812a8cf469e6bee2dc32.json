{"ast":null,"code":"import _classCallCheck from \"/Users/timothybell/code/src/react/software_project/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/timothybell/code/src/react/software_project/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/timothybell/code/src/react/software_project/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/timothybell/code/src/react/software_project/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/timothybell/code/src/react/software_project/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/timothybell/code/src/react/software_project/src/components/type.js\";\nimport React from \"react\";\nimport { Dropdown, Form, Button, Header, Message } from \"semantic-ui-react\";\nvar options = [{\n  key: \"American\",\n  text: \"American\",\n  value: \"american\"\n}, {\n  key: \"Chinese\",\n  text: \"Chinese\",\n  value: \"chinese\"\n}, {\n  key: \"Greek\",\n  text: \"Greek\",\n  value: \"greek\"\n}, {\n  key: \"Japanese\",\n  text: \"Japanese\",\n  value: \"japanese\"\n}, {\n  key: \"Korean\",\n  text: \"Korean\",\n  value: \"korean\"\n}, {\n  key: \"Indian\",\n  text: \"Indian\",\n  value: \"indian\"\n}];\n\nvar Type =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Type, _React$Component);\n\n  function Type() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Type);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Type)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.saveAndContinue = function (e) {\n      console.log(_this.props.values);\n      e.preventDefault();\n\n      _this.props.nextStep();\n    };\n\n    return _this;\n  }\n\n  _createClass(Type, [{\n    key: \"render\",\n    value: function render() {\n      var values = this.props.values;\n      return React.createElement(Form, {\n        color: \"green\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(Header, {\n        as: \"h1\",\n        textAlign: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"Enter User Details\"), React.createElement(Dropdown, {\n        onChange: this.props.handleChange(\"type\"),\n        label: \"Type of Food\",\n        selection: true,\n        fluid: true,\n        search: true,\n        options: options,\n        values: values,\n        placeholder: \"Type of Food\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }), React.createElement(Button, {\n        onClick: this.saveAndContinue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Save And Continue \"));\n    }\n  }]);\n\n  return Type;\n}(React.Component);\n\nexport default Type;","map":{"version":3,"sources":["/Users/timothybell/code/src/react/software_project/src/components/type.js"],"names":["React","Dropdown","Form","Button","Header","Message","options","key","text","value","Type","saveAndContinue","e","console","log","props","values","preventDefault","nextStep","handleChange","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,IAAnB,EAAyBC,MAAzB,EAAiCC,MAAjC,EAAyCC,OAAzC,QAAwD,mBAAxD;AAEA,IAAMC,OAAO,GAAG,CACd;AAAEC,EAAAA,GAAG,EAAE,UAAP;AAAmBC,EAAAA,IAAI,EAAE,UAAzB;AAAqCC,EAAAA,KAAK,EAAE;AAA5C,CADc,EAEd;AAAEF,EAAAA,GAAG,EAAE,SAAP;AAAkBC,EAAAA,IAAI,EAAE,SAAxB;AAAmCC,EAAAA,KAAK,EAAE;AAA1C,CAFc,EAGd;AAAEF,EAAAA,GAAG,EAAE,OAAP;AAAgBC,EAAAA,IAAI,EAAE,OAAtB;AAA+BC,EAAAA,KAAK,EAAE;AAAtC,CAHc,EAId;AAAEF,EAAAA,GAAG,EAAE,UAAP;AAAmBC,EAAAA,IAAI,EAAE,UAAzB;AAAqCC,EAAAA,KAAK,EAAE;AAA5C,CAJc,EAKd;AAAEF,EAAAA,GAAG,EAAE,QAAP;AAAiBC,EAAAA,IAAI,EAAE,QAAvB;AAAiCC,EAAAA,KAAK,EAAE;AAAxC,CALc,EAMd;AAAEF,EAAAA,GAAG,EAAE,QAAP;AAAiBC,EAAAA,IAAI,EAAE,QAAvB;AAAiCC,EAAAA,KAAK,EAAE;AAAxC,CANc,CAAhB;;IASMC,I;;;;;;;;;;;;;;;;;;UACJC,e,GAAkB,UAAAC,CAAC,EAAI;AACrBC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAKC,KAAL,CAAWC,MAAvB;AACAJ,MAAAA,CAAC,CAACK,cAAF;;AACA,YAAKF,KAAL,CAAWG,QAAX;AACD,K;;;;;;;6BAEQ;AAAA,UACCF,MADD,GACY,KAAKD,KADjB,CACCC,MADD;AAEP,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,EAAE,EAAC,IAAX;AAAgB,QAAA,SAAS,EAAC,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,EAIE,oBAAC,QAAD;AACE,QAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWI,YAAX,CAAwB,MAAxB,CADZ;AAEE,QAAA,KAAK,EAAC,cAFR;AAGE,QAAA,SAAS,MAHX;AAIE,QAAA,KAAK,MAJP;AAKE,QAAA,MAAM,MALR;AAME,QAAA,OAAO,EAAEb,OANX;AAOE,QAAA,MAAM,EAAEU,MAPV;AAQE,QAAA,WAAW,EAAC,cARd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,EAeE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKL,eAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAfF,CADF;AAmBD;;;;EA5BgBX,KAAK,CAACoB,S;;AA+BzB,eAAeV,IAAf","sourcesContent":["import React from \"react\";\nimport { Dropdown, Form, Button, Header, Message } from \"semantic-ui-react\";\n\nconst options = [\n  { key: \"American\", text: \"American\", value: \"american\" },\n  { key: \"Chinese\", text: \"Chinese\", value: \"chinese\" },\n  { key: \"Greek\", text: \"Greek\", value: \"greek\" },\n  { key: \"Japanese\", text: \"Japanese\", value: \"japanese\" },\n  { key: \"Korean\", text: \"Korean\", value: \"korean\" },\n  { key: \"Indian\", text: \"Indian\", value: \"indian\" }\n];\n\nclass Type extends React.Component {\n  saveAndContinue = e => {\n    console.log(this.props.values);\n    e.preventDefault();\n    this.props.nextStep();\n  };\n\n  render() {\n    const { values } = this.props;\n    return (\n      <Form color=\"green\">\n        <Header as=\"h1\" textAlign=\"center\">\n          Enter User Details\n        </Header>\n        <Dropdown\n          onChange={this.props.handleChange(\"type\")}\n          label=\"Type of Food\"\n          selection\n          fluid\n          search\n          options={options}\n          values={values}\n          placeholder=\"Type of Food\"\n        />\n\n        <Button onClick={this.saveAndContinue}>Save And Continue </Button>\n      </Form>\n    );\n  }\n}\n\nexport default Type;\n"]},"metadata":{},"sourceType":"module"}